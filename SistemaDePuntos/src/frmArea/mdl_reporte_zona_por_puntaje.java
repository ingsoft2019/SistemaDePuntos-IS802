/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frmArea;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luis Estrada
 */
public class mdl_reporte_zona_por_puntaje extends java.awt.Dialog {

     static ResultSet resultado;
    static ResultSet resultado1;
    static ResultSet resultado2;
    int contador1;
    int contador2;
    
    /**
     * Creates new form mdl_reporte_zona_por_puntaje
     */
    public mdl_reporte_zona_por_puntaje(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);// Para que el formulario aparezca en el centro de la pantala
        this.setLocationRelativeTo(null); //para ponerse en el centro
        this.setResizable(false); //Desactivar bot√≥n maximizar de una ventana
        setIconImage(new ImageIcon(getClass().getResource("../imgSP/icono.png")).getImage()); //cambia el icono del formulario
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnGenerarConsulta = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setMaximumSize(new java.awt.Dimension(602, 486));
        setMinimumSize(new java.awt.Dimension(602, 486));
        setTitle("Reporte filtro por Zonas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        setLayout(null);

        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Reporte filtro por Zonas");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(170, 30, 280, 32);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Seleccione la Zona :");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(30, 90, 140, 19);

        jComboBox1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Zona 1", "Zona 2", "Zona 3", "Zona 4", "Zona 5", "Zona 6" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox1);
        jComboBox1.setBounds(180, 86, 210, 30);

        btnGenerarConsulta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgSP/buscar.png"))); // NOI18N
        btnGenerarConsulta.setText("Generar Consulta");
        btnGenerarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarConsultaActionPerformed(evt);
            }
        });
        jPanel2.add(btnGenerarConsulta);
        btnGenerarConsulta.setBounds(400, 80, 170, 40);

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre Completo", "Puntos", "Direccion", "Correo", "Telefono"
            }
        ));
        jTable1.setMaximumSize(new java.awt.Dimension(300, 64));
        jTable1.setMinimumSize(new java.awt.Dimension(300, 64));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 150, 560, 310);

        add(jPanel2);
        jPanel2.setBounds(0, 0, 600, 490);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void btnGenerarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarConsultaActionPerformed
        // TODO add your handling code here:
        if (jComboBox1.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Debe de Ingresar un Fecha Valida");
        } else {
            try {
                resultado1 = Conexion.Conexion.consulta("   select count(*)  from (\n" +
                    " select concat(p.pnombre,' ',p.snombre,' ',p.papellido,' ', p.sapellido ) as nombrecompleto , c.puntos_actuales  ,  z.zona\n" +
                    "  from [PR].[dbo].[Persona] P inner join [PR].[dbo].Zona Z on Z.id_zona = P.id_zona\n" +
                    "inner join   [PR].[dbo].Cliente C on  C.id_persona = P.id_persona where z.zona = 'Zona 2' \n" +
                    "UNION\n" +
                    " select 'SUMA POR ZONA',  SUM (c.puntos_actuales) PuntosZona ,  z.zona\n" +
                    "  from [PR].[dbo].[Persona] P inner join [PR].[dbo].Zona Z on Z.id_zona = P.id_zona\n" +
                    "inner join   [PR].[dbo].Cliente C on  C.id_persona = P.id_persona where z.zona = '"+jComboBox1.getSelectedItem()+"' \n" +
                    "group by  z.zona) as fch \n" +
                    "  ;");
                try {
                    while (resultado1.next()) {
                        contador1 = resultado1.getInt(1);
                    }
                    if (contador1 >= 1) {
                        buscarCliente();
                    } else {
                        JOptionPane.showMessageDialog(null, "El registro que busca no existe");
                    }
                } catch (SQLException em) {
                    throw em;
                }

            } catch (Exception e) {
                try {
                    throw e;
                } catch (Exception ex) {
                    Logger.getLogger(frmConsultasxEdades.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnGenerarConsultaActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                mdl_reporte_zona_por_puntaje dialog = new mdl_reporte_zona_por_puntaje(new java.awt.Frame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    
     public void buscarCliente() throws SQLException {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0);
        resultado = Conexion.Conexion.consulta(" select concat(p.pnombre,' ',p.snombre,' ',p.papellido,' ', p.sapellido ) as nombrecompleto , c.puntos_actuales  ,  p.detalle_direccion, p.correo,p.telefono1\n" +
"  from [PR].[dbo].[Persona] P inner join [PR].[dbo].Zona Z on Z.id_zona = P.id_zona\n" +
"inner join   [PR].[dbo].Cliente C on  C.id_persona = P.id_persona where z.zona = '"+jComboBox1.getSelectedItem()+"' ");
        try {
            while (resultado.next()) {
                Vector v = new Vector();
                v.add(resultado.getString(1));
                System.out.println("El Valor es: "+resultado.getString(1));
                v.add(resultado.getString(2));
                v.add(resultado.getString(3));
                v.add(resultado.getString(4));
                v.add(resultado.getString(5));
                modelo.addRow(v);
                jTable1.setModel(modelo);
            }
        } catch (SQLException e) {
           throw e;     
        }catch (Exception ex) {
           throw ex;     
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerarConsulta;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
