/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frmArea;

import Clases.Zona;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
//Para la grafica
import org.jfree.chart.*;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Luis Estrada
 */
public class mdl_reporte_en_graficos extends java.awt.Dialog {

    /**
     * Creates new form mdl_reporte_en_graficas_proyecto
     */
    static ResultSet resultado6;
    static ResultSet resultado1;
    static ResultSet resultado2;
    JFreeChart grafico = null;
    DefaultCategoryDataset datos = new DefaultCategoryDataset();
    Vector v = new Vector();



    public mdl_reporte_en_graficos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null); //para ponerse en el centro         
        this.setResizable(false); //Desactivar bot√≥n maximizar de una ventana
        setIconImage(new ImageIcon(getClass().getResource("../imgSP/icono.png")).getImage()); //cambia el icono del formulario
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblRangoPorEdad = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        combox_tipo_grafico = new javax.swing.JComboBox();
        btn_graficar = new javax.swing.JButton();
        combox_datos_graficables = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(555, 296));
        setMinimumSize(new java.awt.Dimension(555, 296));
        setTitle("Grafico de sistema de puntos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        setLayout(null);

        jPanel1.setLayout(null);

        lblRangoPorEdad.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblRangoPorEdad.setText("Grafico de sistema de puntos ");
        jPanel1.add(lblRangoPorEdad);
        lblRangoPorEdad.setBounds(90, 30, 380, 29);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("Tipo de grafico:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(40, 100, 180, 20);

        combox_tipo_grafico.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Eliga un tipo de grafico", "Barras", "Lineal", "Pastel" }));
        combox_tipo_grafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combox_tipo_graficoActionPerformed(evt);
            }
        });
        jPanel1.add(combox_tipo_grafico);
        combox_tipo_grafico.setBounds(220, 100, 260, 26);

        btn_graficar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgSP/grafica.png"))); // NOI18N
        btn_graficar.setText("GRAFICAR");
        btn_graficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_graficarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_graficar);
        btn_graficar.setBounds(210, 230, 140, 40);

        combox_datos_graficables.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elegia un dato para graficar", "Sexo de los clientes", "Cantidad de clientes por zona" }));
        jPanel1.add(combox_datos_graficables);
        combox_datos_graficables.setBounds(220, 150, 260, 26);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Consulta:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(50, 150, 170, 20);

        add(jPanel1);
        jPanel1.setBounds(0, 0, 560, 300);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void combox_tipo_graficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combox_tipo_graficoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combox_tipo_graficoActionPerformed

    private void btn_graficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_graficarActionPerformed
            try {
                //Area para consultas
                String tipo_grafica = combox_tipo_grafico.getSelectedItem().toString();
                String tipo_consulta = combox_datos_graficables.getSelectedItem().toString();


                        if(tipo_consulta.equals("Sexo de los clientes")){
                            sexoCliente(tipo_grafica);
                        }

                        if(tipo_consulta.equals("Cantidad de clientes por zona")){
                            cantidadDeClientePorZona(tipo_grafica);
                        }

            } catch (Exception ex) {
                System.out.println("Error " + ex);
            }
    }//GEN-LAST:event_btn_graficarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                mdl_reporte_en_graficos dialog = new mdl_reporte_en_graficos(new java.awt.Frame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
   

    public  void sexoCliente(String tipo_grafica){
                int cant_F=0 ;
                int cant_M =0;

        resultado6 = Conexion.Conexion.consulta("select sexo from Persona");
            try {
                while (resultado6.next()) {
                   // v.add(resultado.getString(1));
                   // v.add(resultado.getString(2));
                    System.out.println("El Valor dato 1: "+resultado6.getString(1));
                    if("M".equals(resultado6.getString(1).toString())){
                       cant_M++;
                        System.out.println(cant_M);
                    }
                    
                    if("F".equals(resultado6.getString(1).toString())){
                        cant_F++;
                        System.out.println(cant_F);
                    }
               }
        }catch (Exception ex) {
                System.out.println("" + ex);  
        }
            
        int dato1 =cant_M;
        int dato2 =cant_F;
         System.out.println("M = " +cant_M + "  - - " +"F = " +cant_F );

        datos.addValue(dato1,"Grafica Sexo","Masculino");
        datos.addValue(dato2,"Grafica Sexo","Femenino");
     /*  datos.addValue(dato3,"Grafica 1","Tres");
        datos.addValue(dato4,"Grafica 1","Cuatro");*/
        String tipoGrafica = combox_tipo_grafico.getSelectedItem().toString();

        if(tipoGrafica.equals("Barras")){
            grafico = ChartFactory.createBarChart("Grafica sexo de clientes", "Eje X - Tipo", "Eje Y - Cantidad",datos ,PlotOrientation.VERTICAL, true, true, false);
        }
        if(tipoGrafica.equals("Lineal")){
            grafico = ChartFactory.createLineChart("Grafica sexo de clientes", "Eje X - Tipo", "Eje Y- Cantidad",datos ,PlotOrientation.VERTICAL, true, true, false);
        }
        if(tipoGrafica.equals("Pastel")){
            DefaultPieDataset datosPie = new DefaultPieDataset();
            datosPie.setValue("Masculino", dato1);
            datosPie.setValue("Femenino", dato2);

            grafico = ChartFactory.createPieChart("Grafica sexo de clientes", datosPie, true, true, false);
        }

            ChartPanel cPanel = new ChartPanel(grafico);
            frmMenuPrincipal frmMenuPrincipal =  new frmMenuPrincipal();
            JDialog dialog = new JDialog(frmMenuPrincipal,true);
            dialog.setContentPane(cPanel);
            dialog.pack();
            dialog.setSize(cPanel.getSize());
            dialog.setLocationRelativeTo(null);
            dialog.setTitle("Grafica");
            dialog.setIconImage(Toolkit.getDefaultToolkit().getImage(
            getClass().getResource("../imgSP/icono.png")));
            dialog.setVisible(true);
            
             cant_F=0 ;
             cant_M =0;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_graficar;
    private javax.swing.JComboBox<String> combox_datos_graficables;
    private javax.swing.JComboBox combox_tipo_grafico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblRangoPorEdad;
    // End of variables declaration//GEN-END:variables

    private void cantidadDeClientePorZona(String tipo_grafica) {

    int cant=0;
           resultado6 = Conexion.Conexion.consulta("SELECT z1.Zona, (SELECT COUNT(*) FROM Persona p WHERE p.id_zona = z1.id_zona) 'Cantidad de personas' FROM Zona z1");
              String matriz[][]= new String[25][2];
              
            try {
                
                while (resultado6.next()) {
                   v.add(matriz[cant][0]=resultado6.getString(1));
                   v.add(matriz[cant][1]=resultado6.getString(2));
                    System.out.println("");
                    System.out.println("El Valor dato 1: "+ matriz[cant][0]);
                    System.out.println("El Valor dato 2: "+matriz[cant][1]);
                    System.out.println("Longitud de matriz" +matriz.length); 
               
                    if(cant<=15 && resultado6.getString(1) != null && resultado6.getString(2) != null){
                        cant++;    
                    }else{
                        break;
                    }                     
               }
                
                int var1,var2,var3,var4,var5,var6,var7,var8,var9,var10,var11,var12,var13,var14,var15,var16;
                String cad1,cad2,cad3,cad4,cad5,cad6,cad7,cad8,cad9,cad10,cad11,cad12,cad13,cad14,cad15,cad16;
                
               
                if(matriz[0][1] != null && matriz[0][0] != null){
                    var1=Integer.parseInt(matriz[0][1]);
                    cad1=matriz[0][0];
                }else{
                    var1=0;
                    cad1="Vacio";
                }
                if(matriz[1][1] != null&& matriz[1][0] != null){
                    var2=Integer.parseInt(matriz[1][1]);
                    cad2=matriz[1][0];
                }else{
                    var2=0;
                    cad2="Vacio";
                }
                if(matriz[2][1] != null&& matriz[2][0] != null){
                    var3=Integer.parseInt(matriz[2][1]);
                    cad3=matriz[2][0];
                }else{
                    var3=0;
                    cad3="Vacio";
                }
                 if(matriz[3][1] != null&& matriz[3][0] != null){
                    var4=Integer.parseInt(matriz[3][1]);
                    cad4=matriz[3][0];
                }else{
                    var4=0;
                    cad4="Vacio";
                }
                if(matriz[4][1] != null&& matriz[4][0] != null){
                    var5=Integer.parseInt(matriz[4][1]);
                    cad5=matriz[4][0];
                }else{
                    var5=0;
                    cad5="Vacio";
                }
                if(matriz[5][1] != null&& matriz[5][0] != null){
                    var6=Integer.parseInt(matriz[5][1]);
                    cad6=matriz[5][0];
                }else{
                    var6=0;
                    cad6="Vacio";
                }
                if(matriz[6][1] != null&& matriz[6][0] != null){
                    var7=Integer.parseInt(matriz[6][1]);
                    cad7=matriz[6][0];
                }else{
                    var7=0;
                    cad7="Vacio";
                }
               if(matriz[7][1] != null&& matriz[7][0] != null){
                    var8=Integer.parseInt(matriz[7][1]);
                    cad8=matriz[7][0];
                }else{
                    var8=0;
                    cad8="Vacio";
                }
                 if(matriz[8][1] != null&& matriz[8][0] != null){
                    var9=Integer.parseInt(matriz[8][1]);
                    cad9=matriz[8][0];
                }else{
                    var9=0;
                    cad9="Vacio";
                }
                if(matriz[9][1] != null&& matriz[9][0] != null){
                    var10=Integer.parseInt(matriz[9][1]);
                    cad10=matriz[9][0];
                }else{
                    var10=0;
                    cad10="Vacio";
                }
                if(matriz[10][1] != null&& matriz[10][0] != null){
                    var11=Integer.parseInt(matriz[10][1]);
                    cad11=matriz[10][0];
                }else{
                    var11=0;
                    cad11="Vacio";
                }
                if(matriz[11][1] != null&& matriz[11][0] != null){
                    var12=Integer.parseInt(matriz[11][1]);
                    cad12=matriz[11][0];
                }else{
                    var12=0;
                    cad12="Vacio";
                }
                if(matriz[12][1] != null&& matriz[12][0] != null){
                    var13=Integer.parseInt(matriz[12][1]);
                    cad13=matriz[12][0];
                }else{
                    var13=0;
                    cad13="Vacio";
                }
                 if(matriz[13][1] != null&& matriz[13][0] != null){
                    var14=Integer.parseInt(matriz[13][1]);
                    cad14=matriz[13][0];
                }else{
                    var14=0;
                    cad14="Vacio";
                }
                if(matriz[14][1] != null&& matriz[14][0] != null){
                    var15=Integer.parseInt(matriz[14][1]);
                    cad15=matriz[14][0];
                }else{
                    var15=0;
                    cad15="Vacio";
                }
                if(matriz[15][1] != null&& matriz[15][0] != null){
                    var16=Integer.parseInt(matriz[15][1]);
                    cad16=matriz[15][0];
                }else{
                    var16=0;
                    cad16="Vacio";
                }
                
                System.out.println("");
                System.out.println("Nombre "+ cad1 + " puntos "+ var1);
                System.out.println("Nombre "+ cad2 + " puntos "+ var2);
                System.out.println("Nombre "+ cad3 + " puntos "+ var3);
                System.out.println("Nombre "+ cad4 + " puntos "+ var4);
                System.out.println("Nombre "+ cad5 + " puntos "+ var5);
                System.out.println("Nombre "+ cad6 + " puntos "+ var6);
                System.out.println("Nombre "+ cad7 + " puntos "+ var7);
                System.out.println("Nombre "+ cad8 + " puntos "+ var8);
                System.out.println("Nombre "+ cad9 + " puntos "+ var9);
                System.out.println("Nombre "+ cad10 + " puntos "+ var10);
                System.out.println("Nombre "+ cad11 + " puntos "+ var11);
                System.out.println("Nombre "+ cad12 + " puntos "+ var12);
                System.out.println("Nombre "+ cad13 + " puntos "+ var13);
                System.out.println("Nombre "+ cad14 + " puntos "+ var14);
                System.out.println("Nombre "+ cad15 + " puntos "+ var15);
                System.out.println("Nombre "+ cad16 + " puntos "+ var16);
                System.out.println("");
               // System.out.println("Nombre "+ cad1 + " puntos "+ var1);
                
                datos.addValue(var1,"Grafica cantidad De Cliente Por Zona",cad1);
                datos.addValue(var2,"Grafica cantidad De Cliente Por Zona",cad2);
                datos.addValue(var3,"Grafica cantidad De Cliente Por Zona",cad3);
                datos.addValue(var4,"Grafica cantidad De Cliente Por Zona",cad4);
                datos.addValue(var5,"Grafica cantidad De Cliente Por Zona",cad5);
                datos.addValue(var6,"Grafica cantidad De Cliente Por Zona",cad6);
                datos.addValue(var7,"Grafica cantidad De Cliente Por Zona",cad7);
                datos.addValue(var8,"Grafica cantidad De Cliente Por Zona",cad8);
                datos.addValue(var9,"Grafica cantidad De Cliente Por Zona",cad9);
                datos.addValue(var10,"Grafica cantidad De Cliente Por Zona",cad10);
                datos.addValue(var11,"Grafica cantidad De Cliente Por Zona",cad11);
                datos.addValue(var12,"Grafica cantidad De Cliente Por Zona",cad12);
                datos.addValue(var13,"Grafica cantidad De Cliente Por Zona",cad13);
                datos.addValue(var14,"Grafica cantidad De Cliente Por Zona",cad14);
                datos.addValue(var15,"Grafica cantidad De Cliente Por Zona",cad15);
                datos.addValue(var16,"Grafica cantidad De Cliente Por Zona",cad16);
               // datos.addValue(var1,"Grafica top 5",cad1);

                if(tipo_grafica.equals("Barras")){
                    grafico = ChartFactory.createBarChart("Grafica cantidad De Cliente Por Zona", "Eje X - Nombre", "Eje Y - Puntos",datos ,PlotOrientation.VERTICAL, true, true, false);
                }

                if(tipo_grafica.equals("Lineal")){
                    grafico = ChartFactory.createLineChart("Grafica cantidad De Cliente Por Zona", "Eje X - Nombre", "Eje Y- Puntos",datos ,PlotOrientation.VERTICAL, true, true, false);
                }

                if(tipo_grafica.equals("Pastel")){
                    DefaultPieDataset datosPie = new DefaultPieDataset();
                    datosPie.setValue(cad1, var1);
                    datosPie.setValue(cad2, var2);
                    datosPie.setValue(cad3, var3);
                    datosPie.setValue(cad4, var4);
                    datosPie.setValue(cad5, var5);
                    datosPie.setValue(cad6, var6);
                    datosPie.setValue(cad7, var7);
                    datosPie.setValue(cad8, var8);
                    datosPie.setValue(cad9, var9);
                    datosPie.setValue(cad10, var10);
                    datosPie.setValue(cad11, var11);
                    datosPie.setValue(cad12, var12);
                    datosPie.setValue(cad13, var13);
                    datosPie.setValue(cad14, var14);
                    datosPie.setValue(cad15, var15);
                    datosPie.setValue(cad16, var16);
                 //   datosPie.setValue(matriz[4][0], var1);

                    grafico = ChartFactory.createPieChart("Grafica cantidad De Cliente Por Zona", datosPie, true, true, false);
                }

                    ChartPanel cPanel = new ChartPanel(grafico);
                    frmMenuPrincipal frmMenuPrincipal =  new frmMenuPrincipal();
                    JDialog dialog = new JDialog(frmMenuPrincipal,true);
                    dialog.setContentPane(cPanel);
                    dialog.pack();
                    dialog.setSize(cPanel.getSize());
                    dialog.setLocationRelativeTo(null);
                    dialog.setTitle("Grafica");
                    dialog.setIconImage(Toolkit.getDefaultToolkit().getImage(
                    getClass().getResource("../imgSP/icono.png")));
                    dialog.setVisible(true);

                                cant=0 ;

                        }catch (NumberFormatException | SQLException ex) {
                                  System.out.println("Error " + ex);
                          }
            }
}
