/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frmArea;

import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
//librerias para encripotar e desenccriptar
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import org.apache.commons.codec.binary.Base64;

/**
 *
 * @author Luis Estrada
 */
public class mdl_cambiar_contrasena extends java.awt.Dialog {
    private String usuario;
    /**
     * Creates new form mdl_cambiar_contrasena
     */
    public mdl_cambiar_contrasena(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null); //para ponerse en el centro
        this.setResizable(false); //Desactivar botón maximizar de una ventana
        setIconImage(new ImageIcon(getClass().getResource("../imgSP/icono.png")).getImage()); //cambia el icono del formulario
        lblConfirmacion.setVisible(false);
        lblConfirmacion2.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txt_pass_actual = new javax.swing.JTextField();
        txt_pass_nuevo = new javax.swing.JTextField();
        txt_pass_nuevo_confirmar = new javax.swing.JTextField();
        btn_cambiar_pass = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblConfirmacion = new javax.swing.JLabel();
        lblConfirmacion2 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(648, 417));
        setMinimumSize(new java.awt.Dimension(648, 417));
        setTitle("Cambiar contraseña del sistema ");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        setLayout(null);

        jPanel1.setLayout(null);

        txt_pass_actual.setToolTipText("");
        jPanel1.add(txt_pass_actual);
        txt_pass_actual.setBounds(270, 130, 320, 24);
        jPanel1.add(txt_pass_nuevo);
        txt_pass_nuevo.setBounds(270, 190, 320, 24);
        jPanel1.add(txt_pass_nuevo_confirmar);
        txt_pass_nuevo_confirmar.setBounds(270, 250, 320, 24);

        btn_cambiar_pass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgSP/guardar.png"))); // NOI18N
        btn_cambiar_pass.setText("Cambiar ");
        btn_cambiar_pass.setToolTipText("");
        btn_cambiar_pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cambiar_passActionPerformed(evt);
            }
        });
        jPanel1.add(btn_cambiar_pass);
        btn_cambiar_pass.setBounds(250, 330, 140, 40);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Cambiar  Contraseña");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(210, 40, 260, 29);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Contraseñan actual:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(40, 130, 230, 17);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Contraseña nueva:");
        jLabel3.setToolTipText("");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(40, 190, 230, 20);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Confirmar contraseña nueva: ");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(40, 250, 230, 17);

        lblConfirmacion.setText("No coinciden las contraseñas");
        jPanel1.add(lblConfirmacion);
        lblConfirmacion.setBounds(270, 280, 310, 16);

        lblConfirmacion2.setText("Contraseña actual no coincide");
        jPanel1.add(lblConfirmacion2);
        lblConfirmacion2.setBounds(270, 160, 260, 16);

        add(jPanel1);
        jPanel1.setBounds(0, 0, 650, 420);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void btn_cambiar_passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cambiar_passActionPerformed
        String contrasenaNueva="";
        String contrasenaActual="";
        boolean respuesta=false;
        
        try {
            contrasenaNueva = String.valueOf(Clases.encriptarContrasena.encriptar(txt_pass_nuevo.getText()));
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(mdl_cambiar_contrasena.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            contrasenaActual = String.valueOf(Clases.encriptarContrasena.encriptar(txt_pass_actual.getText()));
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(mdl_cambiar_contrasena.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        if( txt_pass_nuevo.getText().equals(txt_pass_nuevo_confirmar.getText()) ){
            try {
                respuesta = verificarContraseniaActual(contrasenaActual);
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(mdl_cambiar_contrasena.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (respuesta){
                //String sql="";
                String sql = "UPDATE Admin\n" +
                    "SET contrasena = '"+ contrasenaNueva +"'\n" +
                    "WHERE usuario = '"+ this.usuario +"' ";
                int filasAfectadas=0;
                try {
                    //realizar el UPDATE sin problemas
                    Statement s = Conexion.Conexion.getConexion().createStatement();
                    //Guardamos las filas afectadas por el UPDATE
                    filasAfectadas = s.executeUpdate(sql);
                    //Realizamos commit de la instruccion SQL
                    Conexion.Conexion.getConexion().commit();
                    //Cerramos la conexion
                    s.close();
                } catch (SQLException ex) {
                    Logger.getLogger(mdl_cambiar_contrasena.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (filasAfectadas == 1){
                    JOptionPane.showMessageDialog(this, "La contraseña ha sido actualizada.");
                } else{
                    JOptionPane.showMessageDialog(this, "No se ha podido actualizar la contraseña.");
                }
            }else {
                lblConfirmacion2.setVisible(true);
                lblConfirmacion2.setForeground(Color.red);
            }
            
        }else {
            lblConfirmacion.setVisible(true);
            lblConfirmacion.setForeground(Color.red);
        }
        
        
                
    }//GEN-LAST:event_btn_cambiar_passActionPerformed

    public void recibirUsuario(String user){
        this.usuario = user;
    }
    
    
    
    public boolean verificarContraseniaActual(String pass) throws NoSuchAlgorithmException{
        int conteo = 0;
        boolean c = false;
        String sql = "Select COUNT(*) from Admin where usuario='" + this.usuario + "' and contrasena ='" 
                +pass + "';";
        ResultSet res = Conexion.Conexion.consulta(sql);
        try{
            while (res.next()){
                conteo = res.getInt(1);
            }            
        }catch(SQLException e){
            System.out.println(e);
        }
        
        if (conteo !=1){
            c = false;
            JOptionPane.showMessageDialog(null, "La contraseña actual no es valida.");
        }
        else if (conteo == 1 ){
             c = true;
        }
        return c;
    }
    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                mdl_cambiar_contrasena dialog = new mdl_cambiar_contrasena(new java.awt.Frame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregar1;
    private javax.swing.JButton btn_cambiar_pass;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblConfirmacion;
    private javax.swing.JLabel lblConfirmacion2;
    private javax.swing.JTextField txt_pass_actual;
    private javax.swing.JTextField txt_pass_nuevo;
    private javax.swing.JTextField txt_pass_nuevo_confirmar;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the txt_pass_actual
     */
    public javax.swing.JTextField getTxt_pass_actual() {
        return txt_pass_actual;
    }

    /**
     * @param txt_pass_actual the txt_pass_actual to set
     */
    public void setTxt_pass_actual(javax.swing.JTextField txt_pass_actual) {
        this.txt_pass_actual = txt_pass_actual;
    }

    /**
     * @return the txt_pass_nuevo
     */
    public javax.swing.JTextField getTxt_pass_nuevo() {
        return txt_pass_nuevo;
    }

    /**
     * @param txt_pass_nuevo the txt_pass_nuevo to set
     */
    public void setTxt_pass_nuevo(javax.swing.JTextField txt_pass_nuevo) {
        this.txt_pass_nuevo = txt_pass_nuevo;
    }

    /**
     * @return the txt_pass_nuevo_confirmar
     */
    public javax.swing.JTextField getTxt_pass_nuevo_confirmar() {
        return txt_pass_nuevo_confirmar;
    }

    /**
     * @param txt_pass_nuevo_confirmar the txt_pass_nuevo_confirmar to set
     */
    public void setTxt_pass_nuevo_confirmar(javax.swing.JTextField txt_pass_nuevo_confirmar) {
        this.txt_pass_nuevo_confirmar = txt_pass_nuevo_confirmar;
    }
}
